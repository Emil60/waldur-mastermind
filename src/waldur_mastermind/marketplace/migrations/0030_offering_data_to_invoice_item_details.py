# Generated by Django 2.2.13 on 2020-11-02 09:47

from django.contrib.contenttypes.models import ContentType
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from waldur_mastermind.marketplace.utils import get_offering_details


def offering_data(apps, schema_editor):
    InvoiceItem = apps.get_model('invoices', 'InvoiceItem')
    Resource = apps.get_model('marketplace', 'Resource')

    for invoice_item in InvoiceItem.objects.filter(
        content_type_id=ContentType.objects.get_for_model(Resource).id
    ):
        if (
            'offering_uuid' not in invoice_item.details.keys()
        ) and invoice_item.object_id:
            try:
                resource = Resource.objects.get(pk=invoice_item.object_id)
                invoice_item.details.update(get_offering_details(resource.offering))
                invoice_item.save()
            except ObjectDoesNotExist:
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('marketplace', '0029_offeringcomponent_default_limit'),
        ('invoices', '0040_invoice_created'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(offering_data),
    ]
