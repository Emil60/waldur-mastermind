# Generated by Django 3.2.16 on 2023-01-05 00:17

import re

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import waldur_core.core.fields
import waldur_core.core.models
import waldur_core.core.validators
import waldur_core.logging.loggers


class Migration(migrations.Migration):
    replaces = [
        ('waldur_slurm', '0001_initial'),
        ('waldur_slurm', '0002_add_gpu_ram_quotas'),
        ('waldur_slurm', '0003_allocationusage'),
        ('waldur_slurm', '0004_increase_precision'),
        ('waldur_slurm', '0005_add_deposit'),
        ('waldur_slurm', '0006_allocationusage_deposit_usage'),
        ('waldur_slurm', '0007_fill_backend_id'),
        ('waldur_slurm', '0008_change_limits_default_values'),
        ('waldur_slurm', '0009_introduce_allocation_user_usage'),
        ('waldur_slurm', '0010_change_default_ram_limit'),
        ('waldur_slurm', '0011_change_ram_usage_to_mb'),
        ('waldur_slurm', '0012_allocationusage_uuid'),
        ('waldur_slurm', '0013_extend_description_limits'),
        ('waldur_slurm', '0014_fix_backend_id'),
        ('waldur_slurm', '0015_allocation_error_traceback'),
        ('waldur_slurm', '0016_drop_deposit_fields'),
        ('waldur_slurm', '0017_association'),
        ('waldur_slurm', '0018_add_allocation_month_year'),
        ('waldur_slurm', '0019_fill_allocation_user_usage'),
        ('waldur_slurm', '0020_fill_component_usage'),
        ('waldur_slurm', '0021_delete_allocation_usage'),
        ('waldur_slurm', '0022_allocation_user_usage_mandatory_fields'),
        ('waldur_slurm', '0023_drop_spl'),
        ('waldur_slurm', '0024_change_default_allocation_limits'),
        ('waldur_slurm', '0025_change_validation_for_association_username'),
    ]

    initial = True

    dependencies = [
        ('structure', '0038_cleanup_agreement_number_placeholder'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allocation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'created',
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='created',
                    ),
                ),
                (
                    'modified',
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name='modified',
                    ),
                ),
                (
                    'description',
                    models.CharField(
                        blank=True, max_length=2000, verbose_name='description'
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        max_length=150,
                        validators=[waldur_core.core.validators.validate_name],
                        verbose_name='name',
                    ),
                ),
                ('uuid', waldur_core.core.fields.UUIDField()),
                ('error_message', models.TextField(blank=True)),
                (
                    'state',
                    django_fsm.FSMIntegerField(
                        choices=[
                            (5, 'Creation Scheduled'),
                            (6, 'Creating'),
                            (1, 'Update Scheduled'),
                            (2, 'Updating'),
                            (7, 'Deletion Scheduled'),
                            (8, 'Deleting'),
                            (3, 'OK'),
                            (4, 'Erred'),
                        ],
                        default=5,
                    ),
                ),
                ('backend_id', models.CharField(blank=True, max_length=255)),
                ('cpu_limit', models.BigIntegerField(default=0)),
                ('cpu_usage', models.BigIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('gpu_limit', models.BigIntegerField(default=0)),
                ('gpu_usage', models.BigIntegerField(default=0)),
                ('ram_limit', models.BigIntegerField(default=0)),
                ('ram_usage', models.BigIntegerField(default=0)),
                ('error_traceback', models.TextField(blank=True)),
                (
                    'project',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='structure.project',
                    ),
                ),
                (
                    'service_settings',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='structure.servicesettings',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=(
                waldur_core.core.models.DescendantMixin,
                waldur_core.core.models.BackendModelMixin,
                waldur_core.logging.loggers.LoggableMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('uuid', waldur_core.core.fields.UUIDField()),
                (
                    'username',
                    models.CharField(
                        max_length=128,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile(
                                    '^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
                                ),
                                'Enter a valid username.',
                                'invalid',
                            )
                        ],
                    ),
                ),
                (
                    'allocation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='associations',
                        to='waldur_slurm.allocation',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AllocationUserUsage',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('username', models.CharField(max_length=32)),
                ('cpu_usage', models.BigIntegerField(default=0)),
                ('ram_usage', models.BigIntegerField(default=0)),
                ('gpu_usage', models.BigIntegerField(default=0)),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'allocation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='waldur_slurm.allocation',
                    ),
                ),
                (
                    'month',
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ]
                    ),
                ),
                ('year', models.PositiveSmallIntegerField()),
            ],
        ),
    ]
